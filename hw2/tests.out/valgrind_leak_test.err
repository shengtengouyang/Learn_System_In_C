==3757== Memcheck, a memory error detector
==3757== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3757== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3757== Command: bin/vtree -q tests/rsrc/test_tree
==3757== 
==3757== Invalid read of size 8
==3757==    at 0x109912: down (vtree.c:412)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x109832: down (vtree.c:389)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757==  Address 0x523e3e8 is 280 bytes inside a block of size 296 free'd
==3757==    at 0x4C30D3B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x10990A: down (vtree.c:411)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x109832: down (vtree.c:389)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757==  Block was alloc'd at
==3757==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x109427: down (vtree.c:287)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x109832: down (vtree.c:389)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757== 
==3757== Invalid read of size 8
==3757==    at 0x109912: down (vtree.c:412)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757==  Address 0x5236208 is 280 bytes inside a block of size 296 free'd
==3757==    at 0x4C30D3B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x10990A: down (vtree.c:411)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757==  Block was alloc'd at
==3757==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x109427: down (vtree.c:287)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757== 
==3757== 
==3757== HEAP SUMMARY:
==3757==     in use at exit: 196,896 bytes in 6 blocks
==3757==   total heap usage: 12 allocs, 6 frees, 202,472 bytes allocated
==3757== 
==3757== 32,816 bytes in 1 blocks are definitely lost in loss record 1 of 3
==3757==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x4F1B9B5: __alloc_dir (opendir.c:216)
==3757==    by 0x4F1B9B5: opendir_tail (opendir.c:136)
==3757==    by 0x4F1B9B5: opendir (opendir.c:190)
==3757==    by 0x109313: down (vtree.c:263)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757== 
==3757== 32,816 bytes in 1 blocks are definitely lost in loss record 2 of 3
==3757==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x4F1B9B5: __alloc_dir (opendir.c:216)
==3757==    by 0x4F1B9B5: opendir_tail (opendir.c:136)
==3757==    by 0x4F1B9B5: opendir (opendir.c:190)
==3757==    by 0x109313: down (vtree.c:263)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x109832: down (vtree.c:389)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757== 
==3757== 131,264 bytes in 4 blocks are definitely lost in loss record 3 of 3
==3757==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3757==    by 0x4F1B9B5: __alloc_dir (opendir.c:216)
==3757==    by 0x4F1B9B5: opendir_tail (opendir.c:136)
==3757==    by 0x4F1B9B5: opendir (opendir.c:190)
==3757==    by 0x109313: down (vtree.c:263)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x109832: down (vtree.c:389)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x109832: down (vtree.c:389)
==3757==    by 0x109BA1: get_data (vtree.c:492)
==3757==    by 0x10A140: vtree_main (vtree.c:619)
==3757==    by 0x10A202: main (main.c:10)
==3757== 
==3757== LEAK SUMMARY:
==3757==    definitely lost: 196,896 bytes in 6 blocks
==3757==    indirectly lost: 0 bytes in 0 blocks
==3757==      possibly lost: 0 bytes in 0 blocks
==3757==    still reachable: 0 bytes in 0 blocks
==3757==         suppressed: 0 bytes in 0 blocks
==3757== 
==3757== For counts of detected and suppressed errors, rerun with: -v
==3757== ERROR SUMMARY: 8 errors from 5 contexts (suppressed: 0 from 0)
